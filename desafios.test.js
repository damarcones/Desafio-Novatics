const { ordena, retiraDuplicados } = require('./desafio01');
const { valida } = require('./desafio02');

describe('Desafio 01', () => {
    describe('Ordenação', () => {

        it('Ordenação de n números', () => {
            expect(ordena([8, 5, 10, 5, 2, 4, 4, 3, 1, 3, 4, 5, 8, 9, 19, 21, 100])).toStrictEqual([ 1, 2, 3, 3, 4, 4, 4, 5, 5, 5, 8, 8, 9, 10, 19, 21, 100])
        })

        it('Ordenação de n números', () => {
            expect(ordena([8, 5, 10, 5, 2, 4, 4, 3])).toStrictEqual([ 2, 3, 4, 4, 5, 5, 8, 10])
        })
    })

    describe('Retirar duplicados', () => {
        it('Retirando Duplicados', () => {
            expect(retiraDuplicados([ 1, 2, 3, 3, 4, 4, 4, 5, 5, 5, 8, 8, 9, 10, 19, 21, 100])).toStrictEqual([ 1, 2, 3, 4, 5, 8, 9, 10, 19, 21, 100])
        })

        it('Retirando Duplicados', () => {
            expect(retiraDuplicados([ 2, 3, 4, 4, 5, 5, 8, 10])).toStrictEqual([2, 3, 4, 5, 8, 10])
        })

    })
    
})

describe('Desafio 02', () => {
    board1 =    
    [["5","3",".",".","7",".",".",".","."]
    ,["6",".",".","1","9","5",".",".","."]
    ,[".","9","8",".",".",".",".","6","."]
    ,["8",".",".",".","6",".",".",".","3"]
    ,["4",".",".","8",".","3",".",".","1"]
    ,["7",".",".",".","2",".",".",".","6"]
    ,[".","6",".",".",".",".","2","8","."]
    ,[".",".",".","4","1","9",".",".","5"]
    ,[".",".",".",".","8",".",".","7","2"]]

    it('Validando Sudoku 01', () => {
        expect(valida(board1)).toBe(true)
    })

    board2 =    
    [["8","3",".",".","7",".",".",".","."]
    ,["6",".",".","1","9","5",".",".","."]
    ,[".","9","8",".",".",".",".","6","."]
    ,["8",".",".",".","6",".",".",".","3"]
    ,["4",".",".","8",".","3",".",".","1"]
    ,["7",".",".",".","2",".",".",".","6"]
    ,[".","6",".",".",".",".","2","8","."]
    ,[".",".",".","4","1","9",".",".","5"]
    ,[".",".",".",".","8",".",".","7","9"]]

    it('Validando Sudoku 02', () => {
        expect(valida(board2)).toBe(false)
    })

    board3 =    
    [["5","3",".","4","7",".",".",".","."]
    ,["6",".",".","1","9","5",".",".","."]
    ,[".","9","8",".",".",".",".","6","."]
    ,["8",".",".",".","6",".",".",".","3"]
    ,["4",".",".","8",".","3",".",".","1"]
    ,["7",".",".",".","2",".",".",".","6"]
    ,[".","6",".",".",".",".","2","8","."]
    ,[".",".",".","4","1","9",".",".","5"]
    ,[".",".",".",".","8",".",".","7","2"]]

    it('Validando Sudoku 03', () => {
        expect(valida(board1)).toBe(true)
    })

})